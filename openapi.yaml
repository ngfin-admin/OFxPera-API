openapi: 3.0.3
info:
  title: OFxPERA API
  description: Philippines Open Finance API Implementation for PERA
  version: 0.0.1
  
servers:
  - url: https://api.ofxpera.ph/v1
    description: OFxPERA API server

tags:
  - name: Admin
    description: Administrative endpoints for organization management
  - name: OAuth
    description: Authentication, authorization and consent management
  - name: Common
    description: Common APIs used across different industries
  - name: Banking
    description: Banking-related use cases for OFxPERA

paths:
  /admin/organization:
    post:
      tags:
        - Admin
      summary: Register organization URIs
      description: API for registering a participating organization's URIs
      responses:
        '201':
          description: Organization successfully registered
    get:
      tags:
        - Admin
      summary: Get all organizations
      description: API for retrieving all registered organization URIs
      responses:
        '200':
          description: Successfully retrieved organizations

  /admin/organization/{id}/certificate:
    get:
      tags:
        - Admin
      summary: Get organization certificate
      description: API for retrieving a registered organization's certificate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved certificate

  /oauth/par:
    post:
      tags:
        - OAuth
      summary: Push Authorization Request
      description: OAuth Push Authorization Request
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - response_type
                - client_id
                - redirect_uri
                - scope
              properties:
                response_type:
                  type: string
                  enum: [code]
                client_id:
                  type: string
                redirect_uri:
                  type: string
                  format: uri
                scope:
                  type: string
                state:
                  type: string
                nonce:
                  type: string
      responses:
        '200':
          description: Successfully processed PAR request
          content:
            application/json:
              schema:
                type: object
                required:
                  - request_uri
                  - expires_in
                properties:
                  request_uri:
                    type: string
                  expires_in:
                    type: integer

  /oauth/authorize:
    get:
      tags:
        - OAuth
      summary: Authorization endpoint
      description: OAuth 2.0 authorization endpoint that initiates the authorization flow
      parameters:
        - name: request_uri
          in: query
          required: true
          description: URI containing the authorization request parameters from PAR
          schema:
            type: string
            format: uri
        - name: client_id
          in: query
          required: true
          description: Client identifier issued to the client during registration
          schema:
            type: string
        - name: response_type
          in: query
          required: true
          description: Must be set to "code" for authorization code flow
          schema:
            type: string
            enum: [code]
        - name: redirect_uri
          in: query
          required: true
          description: URI to return the user to after authorization is complete
          schema:
            type: string
            format: uri
        - name: scope
          in: query
          required: true
          description: Space-separated list of requested scope values
          schema:
            type: string
        - name: state
          in: query
          required: false
          description: Opaque value to maintain state between request and callback
          schema:
            type: string
        - name: nonce
          in: query
          required: false
          description: Random value used to prevent replay attacks
          schema:
            type: string
      responses:
        '200':
          description: Authorization successful
        '302':
          description: Redirect to client with authorization code
          headers:
            Location:
              schema:
                type: string
                format: uri
                description: Redirect URI with authorization code

  /oauth/token:
    post:
      tags:
        - OAuth
      summary: Token endpoint
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - grant_type
                - code
                - redirect_uri
                - client_id
              properties:
                grant_type:
                  type: string
                  enum: [authorization_code, refresh_token]
                code:
                  type: string
                  description: Authorization code received from the authorization server.
                redirect_uri:
                  type: string
                  format: uri
                  description: Redirect URI used in the authorization request.
                client_id:
                  type: string
                  description: Client identifier for the token request.
                client_secret:
                  type: string
                  description: Client secret for the token request.
                refresh_token: 
                  type: string
                  description: Refresh token used to obtain a new access token.
      responses:
        '200':
          description: Token successfully issued
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                  - token_type
                  - expires_in
                properties:
                  access_token:
                    type: string
                    description: Access token for the authenticated user.
                  token_type:
                    type: string
                    enum: [Bearer]
                    description: Type of the token.
                  expires_in:
                    type: integer
                    description: Expiration time of the access token in seconds.
                  refresh_token:
                    type: string
                    description: Refresh token for obtaining a new access token.
                  scope:
                    type: string
                    description: Scope of the access token.

  /oauth/introspection:
    get:
      tags:
        - OAuth
      summary: Token introspection
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Token information retrieved
          content:
            application/json:
              schema:
                type: object
                required:
                  - active
                properties:
                  active:
                    type: boolean
                    description: Indicates whether the token is currently active.
                  client_id:
                    type: string
                    description: Client identifier for the token.
                  username:
                    type: string
                    description: Username associated with the token.
                  scope:
                    type: string
                    description: Scope of the token.
                  exp:
                    type: integer
                    description: Expiration timestamp of the token in seconds since epoch.
                  iat:
                    type: integer
                    description: Issued at timestamp of the token in seconds since epoch.
  /oauth/userinfo:
    get:
      tags:
        - OAuth
      summary: User information
      security:
        - OAuth2: []
      responses:
        '200':
          description: User information retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  sub:
                    type: string
                    description: Unique identifier for the user from the authentication provider's perspective.
                  name:
                    type: string
                    description: Full name of the user.
                  given_name:
                    type: string
                    description: Given name of the user.
                  family_name:
                    type: string
                    description: Family name of the user.
                  email:
                    type: string
                    format: email
                    description: Email address of the user.
                  email_verified:
                    type: boolean
                    description: Indicates whether the user's email address has been verified.
                  phone_number:
                    type: string
                    description: Phone number of the user.
                  phone_number_verified:
                    type: boolean
                    description: Indicates whether the user's phone number has been verified.

  /common/consent:
    post:
      tags:
        - Common
      summary: Create consent
      responses:
        '201':
          description: Consent created successfully

  /common/consent/{id}:
    get:
      tags:
        - Common
      summary: Get consent information
      description: API for retrieving the latest consent information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Consent information retrieved
    put:
      tags:
        - Common
      summary: Update consent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Consent updated successfully
    delete:
      tags:
        - Common
      summary: Revoke consent
      description: API for revoking a previously provided consent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Consent revoked successfully

  /common/customer:
    get:
      tags:
        - Common
      summary: Get customer's Personal Information
      description: (deprecate?) Returns the customer's Personal Information as defined in section 5.2.3
      security:
        - OAuth2: []
      responses:
        '200':
          description: Customer's Personal Information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalInformation'

  /common/customer/{id}/detail:
    get:
      tags:
        - Common
      summary: Get detailed customer information
      parameters:
        - name: id
          in: path
          description: Customer ID, this should map to the sub field returned from the /oauth/userinfo endpoint
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer's Personal Information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalInformation'

  /banking/account:
    get:
      tags:
        - Banking
      summary: Get source account information
      description: API for retrieving information about the customer's source account
      responses:
        '200':
          description: Account information retrieved

  /banking/products:
    get:
      tags:
        - Banking
      summary: Get PERA products
      description: API for retrieving list of PERA products the customer could subscribe to
      responses:
        '200':
          description: Products list retrieved

  /banking/accounts:
    post:
      tags:
        - Banking
      summary: Create banking account
      responses:
        '201':
          description: Banking account created
    get:
      tags:
        - Banking
      summary: Get banking accounts
      responses:
        '200':
          description: Banking accounts retrieved

  /banking/accounts/{id}:
    get:
      tags:
        - Banking
      summary: Get specific banking account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Banking account retrieved

  /banking/account/{id}/transactions:
    get:
      tags:
        - Banking
      summary: Get account transactions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account transactions retrieved

  /banking/account/{id}/transactions/{transactionId}:
    get:
      tags:
        - Banking
      summary: Get specific transaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction details retrieved

  /banking/payments:
    post:
      tags:
        - Banking
      summary: Initiate payment
      description: API for initiating a payment (money movement) transaction
      responses:
        '201':
          description: Payment initiated successfully
    get:
      tags:
        - Banking
      summary: Get payments
      responses:
        '200':
          description: Payments retrieved

  /banking/payments/{id}:
    get:
      tags:
        - Banking
      summary: Get payment status
      description: API for retrieving and validating payment status and other details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment status retrieved
    delete:
      tags:
        - Banking
      summary: Cancel payment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment cancelled successfully

components:
  parameters:
    ParticipantId:
      name: participant-id
      in: header
      required: true
      description: Field referencing the unique identifier of the requesting participant.
      schema:
        type: string
    
    ApiVersion:
      name: x-v
      in: header
      required: true
      description: Version of the API endpoint requested by the client. Must be set to a positive integer. If the version requested is not supported then the holder must respond with a 406 Not Acceptable.
      schema:
        type: integer
        minimum: 1
    
    FapiInteractionId:
      name: x-fapi-interaction-id
      in: header
      required: false
      description: An [RFC4122] UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
      schema:
        type: string
        format: uuid
    
    FapiAuthDate:
      name: x-fapi-auth-date
      in: header
      required: true
      description: The time when the customer last logged in to the Data Recipient Software Product as described in [FAPI-1.0-Baseline]. Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.
      schema:
        type: string
        format: date-time
    
    FapiCustomerIpAddress:
      name: x-fapi-customer-ip-address
      in: header
      required: true
      description: The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
      schema:
        type: string
        format: ipv4
    
    ClientHeaders:
      name: x-client-headers
      in: header
      required: false
      description: The customer's original standard http headers Base64 encoded, including the original User-Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls. Not required for unattended or unauthenticated calls.
      schema:
        type: string
        format: base64
    
    RetryAfter:
      name: Retry-After
      in: header
      required: false
      description: Field indicating the time (in seconds) that the client should wait before retrying an operation. The response should include this header along with responses with the HTTP status code of 429 Too many requests.
      schema:
        type: integer
        minimum: 0
  
  schemas:
    Address:
      type: object
      required:
        - region
        - province
        - city
        - country
        - postal_code
      properties:
        region:
          type: string
          maxLength: 10
          description: PSGC Code
        province:
          type: string
          maxLength: 10
          description: PSGC Code
        city:
          type: string
          maxLength: 10
          description: PSGC Code
        barangay:
          type: string
          maxLength: 10
          description: PSGC Code
        street_address:
          type: string
          maxLength: 200
        country:
          type: string
          maxLength: 3
          description: ISO 3166 Code
        postal_code:
          type: string
          maxLength: 10

    IdType:
      type: object
      required:
        - id_number
        - id_type
      properties:
        id_number:
          type: string
          maxLength: 50
        id_expiry_date:
          type: string
          maxLength: 10
          format: date
          description: Format is YYYY-MM-DD
        id_type:
          type: string
          maxLength: 100
          description: ID Type (e.g., "Drivers License", "Passport", etc.)

    PersonalInformation:
      type: object
      required:
        - sub
        - given_name
        - last_name
        - mobile_number
        - email
        - birthdate
        - nationality
        - presented_ids
        - pera_admin
      properties:
        sub:
          type: string
          maxLength: 50
          description: Subject – FI's unique identifier for the End-User
        title:
          type: string
          maxLength: 50
        given_name:
          type: string
          maxLength: 50
        middle_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        suffix:
          type: string
          maxLength: 10
        phone_number:
          type: string
          maxLength: 15
          pattern: '^[0-9]{11}$'
          example: '63287654321'
        mobile_number:
          type: string
          maxLength: 15
          pattern: '^[0-9]{12}$'
          example: '639171234567'
        email:
          type: string
          maxLength: 50
          format: email
        birthdate:
          type: string
          maxLength: 10
          format: date
          description: Format YYYY-MM-DD
        nationality:
          type: string
          maxLength: 3
          description: ISO 3166 Code
        tin:
          type: string
          maxLength: 15
          pattern: '^[0-9]{3}-[0-9]{3}-[0-9]{3}-[0-9]{3}$'
          description: Format NNN-NNN-NNN-000
        presented_ids:
          type: array
          items:
            $ref: '#/components/schemas/IdType'
          description: Array of identification details
        cdd:
          $ref: '#/components/schemas/CustomerDueDiligence'
        pera_admin:
          type: string
          maxLength: 50
          description: Selected PERA Admin by Customer FI Codes of PERA admin

    CustomerDueDiligence:
      type: object
      required:
        - employment_status
        - pep_indicator
        - fund_source
        - cdd_indicator
      properties:
        employment_status:
          type: string
          maxLength: 50
        occupation:
          type: string
          maxLength: 150
        nature_of_work:
          type: string
          maxLength: 10
          description: PSIC Code
        employer_name:
          type: string
          maxLength: 255
        employer_address:
          $ref: '#/components/schemas/Address'
        pep_indicator:
          type: boolean
          description: Politically Exposed Person 1 - True; 0 - False
        fund_source:
          type: string
          maxLength: 100
          description: Source of Funds
        cdd_indicator:
          type: string
          maxLength: 6
          enum: ['Low', 'Normal', 'High']
          description: Customer Due Diligence Risk Level

  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          scopes: {}
    openFinanceHeaders:
      type: apiKey
      in: header
      name: participant-id
      description: Open Finance security headers

security:
  - OAuth2: []
  - openFinanceHeaders: []

x-global-headers:
  - $ref: '#/components/parameters/ParticipantId'
  - $ref: '#/components/parameters/ApiVersion'
  - $ref: '#/components/parameters/FapiInteractionId'
  - $ref: '#/components/parameters/FapiAuthDate'
  - $ref: '#/components/parameters/FapiCustomerIpAddress'
  - $ref: '#/components/parameters/ClientHeaders'
  - $ref: '#/components/parameters/RetryAfter'