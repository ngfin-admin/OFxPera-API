openapi: 3.0.3
info:
  title: OFxPERA API
  description: Philippines Open Finance API Implementation for PERA
  version: 0.0.1

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/maya-ph/OFxPERA-API/0.0.1
  - url: https://api.ofxpera.ph/v1
    description: OFxPERA API server

tags:
  - name: Bootstrap
    description: Core bootstrapping endpoints for organization registration and management
  - name: OAuth
    description: OpenID Connect authentication, authorization and consent management
  - name: Common
    description: Common APIs used across different use cases

paths:
  /ofxpera/participants:
    post:
      tags:
        - Bootstrap
      summary: Register an OFxPERA Participant
      description: API for registering a PERA Administrator following FAPI Dynamic Client Registration requirements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantConfig'
      responses:
        '201':
          description: Participant successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
    put:
      tags:
        - Bootstrap
      summary: Update an OFxPERA Participant
      description: API for updating the URIs and status of an OFxPERA Participant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantConfig'
      responses:
        '201':
          description: Participant successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
    get:
      tags:
        - Bootstrap
      summary: Get a list of registered OFxPERA Participants
      description: API for retrieving all registered OFxPERA Participants
      responses:
        '200':
          description: Successfully retrieved PERA Administrators
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant'
  
  /oauth/auth:
    get:
      tags:
        - OAuth
      summary: Authorization endpoint
      description: OpenID Connect authorization endpoint that initiates the authorization flow
      parameters:
        - name: client_id
          in: query
          required: true
          description: Client identifier issued to the client during registration
          schema:
            type: string
        - name: response_type
          in: query
          required: true
          description: Must be set to "code" for authorization code flow
          schema:
            type: string
            enum: [ code ]
        - name: redirect_uri
          in: query
          required: true
          description: URI to return the user to after authorization is complete
          schema:
            type: string
            format: uri
        - name: code_challenge
          in: query
          required: true
          description: Code challenge for PKCE
          schema:
            type: string
        - name: code_challenge_method
          in: query
          required: true
          description: Code challenge method for PKCE
          schema:
            type: string
            enum: [ S256 ]
        - name: scope
          in: query
          required: false
          description: Space-separated list of requested scope values
          schema:
            type: string
        - name: state
          in: query
          required: true
          description: Opaque value to maintain state between request and callback
          schema:
            type: string
        - name: prompt
          in: query
          required: false
          description: Prompt for the authorization request
          schema:
            type: string
        - name: nonce
          in: query
          required: false
          description: Random value used to prevent replay attacks
          schema:
            type: string
      responses:
        '200':
          description: Authorization successful
        '302':
          description: Redirect to client with authorization code
          headers:
            Location:
              schema:
                type: string
                format: uri
                description: Redirect URI with authorization code

  /oauth/token:
    post:
      tags:
        - OAuth
      summary: Token endpoint
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - grant_type
                - code
                - redirect_uri
                - client_id
              properties:
                grant_type:
                  type: string
                  enum: [ authorization_code, refresh_token ]
                code:
                  type: string
                  description: Authorization code received from the authorization server.
                redirect_uri:
                  type: string
                  format: uri
                  description: Redirect URI used in the authorization request.
                client_id:
                  type: string
                  description: Client identifier for the token request.
                client_secret:
                  type: string
                  description: Client secret for the token request.
                refresh_token:
                  type: string
                  description: Refresh token used to obtain a new access token.
      responses:
        '200':
          description: Token successfully issued
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                  - token_type
                  - expires_in
                properties:
                  access_token:
                    type: string
                    description: Access token for the authenticated user
                  token_type:
                    type: string
                    enum: [ Bearer ]
                    description: Type of the token, always "Bearer"
                  expires_in:
                    type: integer
                    description: Lifetime in seconds of the access token
                  id_token:
                    type: string
                    description: ID Token value associated with the authenticated session
                  refresh_token:
                    type: string
                    description: Refresh token used to obtain new access tokens
                  scope:
                    type: string
                    description: Space-separated list of scopes associated with the access token

  /oauth/introspect:
    get:
      tags:
        - OAuth
      summary: Token introspection
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Token information retrieved
          content:
            application/json:
              schema:
                type: object
                required:
                  - active
                properties:
                  active:
                    type: boolean
                    description: Indicates whether the token is currently active.
                  client_id:
                    type: string
                    description: Client identifier for the token.
                  username:
                    type: string
                    description: Username associated with the token.
                  scope:
                    type: string
                    description: Scope of the token.
                  exp:
                    type: integer
                    description: Expiration timestamp of the token in seconds since epoch.
                  iat:
                    type: integer
                    description: Issued at timestamp of the token in seconds since epoch.
                    
  /oauth/userinfo:
    get:
      tags:
        - OAuth
      summary: User information
      security:
        - OAuth2: [ ]
      responses:
        '200':
          description: User information retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  sub:
                    type: string
                    description: Unique identifier for the user from the authentication provider's perspective.
                  name:
                    type: string
                    description: Full name of the user.
                  given_name:
                    type: string
                    description: Given name of the user.
                  family_name:
                    type: string
                    description: Family name of the user.
                  email:
                    type: string
                    format: email
                    description: Email address of the user.
                  email_verified:
                    type: boolean
                    description: Indicates whether the user's email address has been verified.
                  phone_number:
                    type: string
                    description: Phone number of the user.
                  phone_number_verified:
                    type: boolean
                    description: Indicates whether the user's phone number has been verified.

  /common/customers/{id}/detail:
    get:
      tags:
        - Common
      summary: Get detailed customer information
      parameters:
        - name: id
          in: path
          description: Customer ID, this should map to the sub field returned from the OIDC token endpoint or the sub field returned from the /oauth/userinfo endpoint
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer's Personal Information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInformation'

  /.well-known/oauth-authorization-server/register:
    post:
      tags:
        - OAuth
      summary: FAPI Dynamic Client Registration
      description: |
        Register a new PERA Administrator as an OAuth client following FAPI Dynamic Client Registration requirements.
        Requires a software statement and supports JWKS for key management.
      security:
        - openFinanceHeaders: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - redirect_uris
                - token_endpoint_auth_method
                - grant_types
                - response_types
                - software_statement
                - scope
              properties:
                redirect_uris:
                  type: array
                  items:
                    type: string
                    format: uri
                  description: Array of redirect URIs for use in OAuth flows
                token_endpoint_auth_method:
                  type: string
                  enum: [
                    'private_key_jwt',
                    'tls_client_auth'
                  ]
                  description: Authentication method for token endpoint, must be either private_key_jwt or tls_client_auth for FAPI
                grant_types:
                  type: array
                  items:
                    type: string
                    enum: [
                      'authorization_code',
                      'refresh_token'
                    ]
                  description: Allowed OAuth grant types
                response_types:
                  type: array
                  items:
                    type: string
                    enum: ['code']
                  description: Allowed OAuth response types
                scope:
                  type: string
                  description: Space-separated list of requested scopes
                software_statement:
                  type: string
                  description: JWT containing software statement from trusted authority
                jwks:
                  type: object
                  description: JSON Web Key Set for client authentication
                  properties:
                    keys:
                      type: array
                      items:
                        type: object
                        description: JWK format keys
                jwks_uri:
                  type: string
                  format: uri
                  description: URI of JSON Web Key Set
                organization_name:
                  type: string
                  description: Name of the PERA Administrator organization
                contacts:
                  type: array
                  items:
                    type: string
                    format: email
                  description: Administrative contact emails
      responses:
        '201':
          description: Client registration successful
          headers:
            Registration-Access-Token:
              schema:
                type: string
              description: Token for managing the registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
    get:
      tags:
        - OAuth
      summary: Get Client Registration
      security:
        - RegistrationAccessToken: []
      responses:
        '200':
          description: Current client configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientRegistration'
    put:
      tags:
        - OAuth
      summary: Update Client Registration
      security:
        - RegistrationAccessToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRegistration'
      responses:
        '200':
          description: Client configuration updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientRegistration'
    delete:
      tags:
        - OAuth
      summary: Delete Client Registration
      security:
        - RegistrationAccessToken: []
      responses:
        '204':
          description: Client registration deleted

components:
  parameters:
    ParticipantId:
      name: participant-id
      in: header
      required: true
      description: Field referencing the unique identifier of the requesting participant.
      schema:
        type: string
    
    ApiVersion:
      name: x-v
      in: header
      required: true
      description: Version of the API endpoint requested by the client. Must be set to a positive integer. If the version requested is not supported then the holder must respond with a 406 Not Acceptable.
      schema:
        type: integer
        maximum: 100
        minimum: 1
    
    FapiInteractionId:
      name: x-fapi-interaction-id
      in: header
      required: false
      description: An [RFC4122] UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
      schema:
        type: string
        format: uuid
        maxLength: 64
    
    FapiAuthDate:
      name: x-fapi-auth-date
      in: header
      required: true
      description: The time when the customer last logged in to the Data Recipient Software Product as described in [FAPI-1.0-Baseline]. Required for all resource calls (customer present and unattended). Not required for unauthenticated calls.
      schema:
        type: string
        format: date-time
    
    FapiCustomerIpAddress:
      name: x-fapi-customer-ip-address
      in: header
      required: true
      description: The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
      schema:
        type: string
        format: ipv4
    
    ClientHeaders:
      name: x-client-headers
      in: header
      required: false
      description: The customer's original standard http headers Base64 encoded, including the original User-Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls. Not required for unattended or unauthenticated calls.
      schema:
        type: string
        format: base64
    
    RetryAfter:
      name: Retry-After
      in: header
      required: false
      description: Field indicating the time (in seconds) that the client should wait before retrying an operation. The response should include this header along with responses with the HTTP status code of 429 Too many requests.
      schema:
        type: integer
        minimum: 0
  
  schemas:
    Address:
      type: object
      required:
        - region
        - province
        - city
        - country
        - postal_code
      properties:
        region:
          type: string
          maxLength: 10
          description: PSGC Code
        province:
          type: string
          maxLength: 10
          description: PSGC Code
        city:
          type: string
          maxLength: 10
          description: PSGC Code
        barangay:
          type: string
          maxLength: 10
          description: PSGC Code
        street_address:
          type: string
          maxLength: 200
        country:
          type: string
          maxLength: 3
          description: ISO 3166 Code
        postal_code:
          type: string
          maxLength: 10

    IdType:
      type: object
      required:
        - idNumber
        - idType
      properties:
        idNumber:
          type: string
          maxLength: 50
        idExpiryDate:
          type: string
          maxLength: 10
          format: date
          description: Format is YYYY-MM-DD
        idType:
          type: string
          maxLength: 100
          description: ID Type (e.g., "Drivers License", "Passport", etc.)
    
    PersonalInformation:
      type: object
      required:
        - sub
        - givenName
        - lastName
        - mobileNumber
        - email
        - birthdate
        - nationality
      properties:
        sub:
          type: string
          maxLength: 50
          description: Subject – FI's unique identifier for the End-User
        title:
          type: string
          maxLength: 50
        givenName:
          type: string
          maxLength: 50
        middleName:
          type: string
          maxLength: 50
        lastName:
          type: string
          maxLength: 50
        suffix:
          type: string
          maxLength: 10
        phoneNumber:
          type: string
          maxLength: 15
          pattern: '^[0-9]{11}$'
          example: '63287654321'
        mobileNumber:
          type: string
          maxLength: 15
          pattern: '^[0-9]{12}$'
          example: '639171234567'
        email:
          type: string
          maxLength: 50
          format: email
        birthdate:
          type: string
          maxLength: 10
          format: date
          description: Format YYYY-MM-DD
        nationality:
          type: string
          maxLength: 3
          description: ISO 3166 Code
        tin:
          type: string
          maxLength: 15
          pattern: '^[0-9]{3}-[0-9]{3}-[0-9]{3}-[0-9]{3}$'
          description: Format NNN-NNN-NNN-000

    CustomerInformation:
      type: object
      required:
        - sub
        - pii
        - cdd
        - presentedIds
      properties:
        sub:
          type: string
          maxLength: 50
          description: Subject – FI's unique identifier for the End-User
        personalInformation:
          $ref: '#/components/schemas/PersonalInformation'
        presentedIds:
          type: array
          items:
            $ref: '#/components/schemas/IdType'
          description: Array of identification details
        cdd:
          $ref: '#/components/schemas/CustomerDueDiligence'
        peraAdmin:
          type: string
          maxLength: 50
          description: Selected PERA Admin by Customer FI Codes of PERA admin

    CustomerDueDiligence:
      type: object
      required:
        - employmentStatus
        - pepIndicator
        - fundSource
        - cddIndicator
      properties:
        employmentStatus:
          type: string
          maxLength: 50
        occupation:
          type: string
          maxLength: 150
        natureOfWork:
          type: string
          maxLength: 10
          description: PSIC Code
        employerName:
          type: string
          maxLength: 255
        employerAddress:
          $ref: '#/components/schemas/Address'
        pepIndicator:
          type: boolean
          default: false
          description: Politically Exposed Person 1 - True; 0 - False
        fundSource:
          type: string
          maxLength: 100
          description: Source of Funds
        cddIndicator:
          type: string
          maxLength: 6
          enum: ['Low', 'Normal', 'High']
          default: 'Normal'
          description: Customer Due Diligence Risk Level

    Participant:
      type: object
      required:
        - participant_name
        - endpoint_uris
      properties:
        participant_id:
          type: string
          description: Unique identifier assigned to the participant
        participant_name:
          type: string
          description: Trading name of the participant
        participant_type:
          type: array
          items:
            type: string
            enum: [PERA_ADMIN, CONTRIBUTOR_FI]
          minItems: 1
          uniqueItems: true
          description: Type(s) of participant in the PERA ecosystem. Can be one or more roles (e.g., ['PERA_ADMIN', 'CONTRIBUTOR_FI'] for participants that function as both PERA administrator and contributor financial institution)
        registered_name:
          type: string
          description: Legal registered name of the participant
        status:
          type: string
          enum: [ACTIVE, INACTIVE, MAINTENANCE]
          default: ACTIVE
          description: Status of the participant
        endpoint_uris:
          $ref: '#/components/schemas/endpointURIs'
        token_endpoint_auth_method:
          type: string
          enum: [
            'private_key_jwt',
            'tls_client_auth'
          ]
          default: 'private_key_jwt'
          description: Authentication method for token endpoint as per FAPI requirements
        grant_types:
          type: array
          items:
            type: string
            enum: [
              'authorization_code',
              'refresh_token'
            ]
          default: ['authorization_code']
          description: Allowed OAuth 2.0 grant types (FAPI requires authorization_code)
        response_types:
          type: array
          items:
            type: string
            enum: ['code']
          default: ['code']
          description: Allowed OAuth 2.0 response types (FAPI requires code flow)
        scope:
          type: string
          default: 'openid profile'
          description: Space-separated list of requested scopes (openid is required for FAPI)
        software_statement:
          type: string
          description: Software statement containing participant metadata
        jwks:
          type: object
          properties:
            keys:
              type: array
              items:
                type: object
          description: JSON Web Key Set for signing requests (required for FAPI)
        contact_details:
          type: object
          required:
            - phone
            - email
          properties:
            phone:
              type: string
            email:
              type: string
              format: email

    RegistrationResponse:
      type: object
      required:
        - client_id
        - registration_access_token
        - registration_client_uri
      properties:
        client_id:
          type: string
          description: Issued client identifier
        registration_access_token:
          type: string
          description: Registration access token for subsequent operations
        registration_client_uri:
          type: string
          format: uri
          description: URI for managing the client registration
        client_id_issued_at:
          type: integer
          description: Time at which the client identifier was issued, in seconds since Unix epoch (1970-01-01T00:00:00Z UTC)

    ParticipantConfig:
      type: object
      required:
        - participant
        - internal_uris
      properties:
        participant:
          $ref: '#/components/schemas/Participant'
        internal_uris:
          $ref: '#/components/schemas/endpointURIs'

    endpointURIs:
      anyOf:
        - type: object
          description: Endpoints for CONTRIBUTOR_FI participants
          required:
            - issuer
            - authorization_endpoint
            - token_endpoint
            - jwks_uri
          properties:
            issuer:
              type: string
              format: uri
              description: URL using the https scheme with no query or fragment component that the OP asserts as its Issuer Identifier
            authorization_endpoint:
              type: string
              format: uri
              description: URL of the OP's OAuth 2.0 Authorization Endpoint
            token_endpoint:
              type: string
              format: uri
              description: URL of the OP's OAuth 2.0 Token Endpoint
            userinfo_endpoint:
              type: string
              format: uri
              description: URL of the OP's UserInfo Endpoint
            end_session_endpoint:
              type: string
              format: uri
              description: URL at the OP to which an RP can perform a redirect to
            jwks_uri:
              type: string
              format: uri
              description: URL of the OP's JSON Web Key Set document for token verification
            registration_endpoint:
              type: string
              format: uri
              description: URL of the OP's Dynamic Client Registration Endpoint
        - type: object
          description: Endpoints for PERA_ADMIN participants
          required:
            - redirect_uris
            - jwks_uri
          properties:
            jwks_uri:
              type: string
              format: uri
              description: URL of the RP's JSON Web Key Set document for client authentication
            redirect_uris:
              type: array
              items:
                type: string
                format: uri
              minItems: 1
              description: Array of redirect URIs to be used in OAuth 2.0 flows

    PERAProduct:
      type: object
      required:
        - productId
        - productName
        - productType
        - currency
        - riskRating
        - navPerShare
        - fundManager
        - regulatoryInfo
      properties:
        productId:
          type: string
          description: Unique identifier for the product
        productName:
          type: string
          description: Name of the investment product
        productType:
          type: string
          enum:
            - UITF
            - MUTUAL_FUND
            - INSURANCE
            - GOVERNMENT_SECURITIES
          description: Type of PERA-eligible investment product
        currency:
          type: string
          enum:
            - PHP
            - USD
          default: 'PHP'
          description: Currency of the product
        riskRating:
          type: string
          enum:
            - CONSERVATIVE
            - MODERATE
            - AGGRESSIVE
          description: Risk classification of the product
        navPerShare:
          type: number
          format: double
          description: Current Net Asset Value per share/unit
        fundManager:
          type: string
          description: Name of the fund manager or investment house
        minimumInitialInvestment:
          type: number
          format: double
          description: Minimum amount required for initial investment
        minimumAdditionalInvestment:
          type: number
          format: double
          description: Minimum amount for subsequent investments
        managementFee:
          type: number
          format: double
          description: Annual management fee percentage
        regulatoryInfo:
          type: object
          required:
            - bspApprovalNumber
            - secRegistrationNumber
          properties:
            bspApprovalNumber:
              type: string
              description: BSP approval or certification number
            secRegistrationNumber:
              type: string
              description: SEC registration number
        historicalPerformance:
          type: object
          properties:
            ytd:
              type: number
              format: double
              description: Year-to-date return percentage
            oneYear:
              type: number
              format: double
              description: One-year return percentage
            threeYear:
              type: number
              format: double
              description: Three-year return percentage
            fiveYear:
              type: number
              format: double
              description: Five-year return percentage
        investmentPolicy:
          type: string
          description: Summary of the product's investment policy and strategy
        cutoffTime:
          type: string
          format: time
          description: Daily cut-off time for transactions
        settlementPeriod:
          type: integer
          description: Number of days for settlement of redemption

    ClientRegistration:
      type: object
      required:
        - client_id
        - redirect_uris
        - token_endpoint_auth_method
        - grant_types
        - response_types
        - software_statement
      properties:
        client_id:
          type: string
          description: Issued client identifier
        redirect_uris:
          type: array
          items:
            type: string
            format: uri
        token_endpoint_auth_method:
          type: string
          enum: [
            'private_key_jwt',
            'tls_client_auth'
          ]
        grant_types:
          type: array
          items:
            type: string
            enum: [
              'authorization_code',
              'refresh_token'
            ]
        response_types:
          type: array
          items:
            type: string
            enum: ['code']
        scope:
          type: string
        software_statement:
          type: string
        jwks:
          type: object
          properties:
            keys:
              type: array
              items:
                type: object
        jwks_uri:
          type: string
          format: uri
        organization_name:
          type: string
        contacts:
          type: array
          items:
            type: string
            format: email

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message describing the error
        details:
          type: array
          items:
            type: string
          description: Additional details about the error

    BadRequestError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - description: Bad Request - The server cannot process the request due to a client error

    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - description: Unauthorized - Authentication is required and has failed or not been provided

  responses:
    BadRequest:
      description: Bad Request - The server cannot process the request due to a client error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    Unauthorized:
      description: Unauthorized - Authentication is required and has failed or not been provided
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'

  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          scopes: {}
    openFinanceHeaders:
      type: apiKey
      in: header
      name: participant-id
      description: Open Finance security headers
    RegistrationAccessToken:
      type: http
      scheme: bearer
      description: Registration Access Token for managing client registration

security:
  - OAuth2: []
  - openFinanceHeaders: []

x-global-headers:
  - $ref: '#/components/parameters/ParticipantId'
  - $ref: '#/components/parameters/ApiVersion'
  - $ref: '#/components/parameters/FapiInteractionId'
  - $ref: '#/components/parameters/FapiAuthDate'
  - $ref: '#/components/parameters/FapiCustomerIpAddress'
  - $ref: '#/components/parameters/ClientHeaders'
  - $ref: '#/components/parameters/RetryAfter'