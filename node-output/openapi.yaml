openapi: 3.0.3
info:
  title: OFxPERA API
  description: Philippines Open Finance API Implementation for PERA
  version: 0.0.1
servers:
- url: https://virtserver.swaggerhub.com/maya-ph/OFxPERA-API/0.0.1
  description: SwaggerHub API Auto Mocking
- url: https://api.ofxpera.ph/v1
  description: OFxPERA API server
security:
- OAuth2: []
- openFinanceHeaders: []
tags:
- name: Admin
  description: Administrative endpoints for organization management
- name: OAuth
  description: "Authentication, authorization and consent management"
- name: Common
  description: Common APIs used across different industries
- name: Banking
  description: Banking-related use cases for OFxPERA
paths:
  /admin/organization:
    get:
      tags:
      - Admin
      summary: Get all organizations
      description: API for retrieving all registered organization URIs
      responses:
        "200":
          description: Successfully retrieved organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
    post:
      tags:
      - Admin
      summary: Register organization URIs
      description: API for registering a participating organization's URIs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        "201":
          description: Organization successfully registered
  /admin/organization/{id}/certificate:
    get:
      tags:
      - Admin
      summary: Get organization certificate
      description: API for retrieving a registered organization's mTLS certificate
        for secure communication
      parameters:
      - name: id
        in: path
        description: The unique identifier of the organization
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved certificate
          content:
            application/x-pem-file:
              schema:
                type: string
                description: PEM-encoded X.509 certificate
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "404":
          description: Organization or certificate not found
        "400":
          description: Invalid request
  /oauth/par:
    post:
      tags:
      - OAuth
      summary: Push Authorization Request
      description: OAuth Push Authorization Request
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/oauth_par_body'
        required: true
      responses:
        "200":
          description: Successfully processed PAR request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
  /oauth/authorize:
    get:
      tags:
      - OAuth
      summary: Authorization endpoint
      description: OAuth 2.0 authorization endpoint that initiates the authorization
        flow
      parameters:
      - name: request_uri
        in: query
        description: URI containing the authorization request parameters from PAR
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: uri
      - name: client_id
        in: query
        description: Client identifier issued to the client during registration
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: response_type
        in: query
        description: Must be set to "code" for authorization code flow
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - code
      - name: redirect_uri
        in: query
        description: URI to return the user to after authorization is complete
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: uri
      - name: scope
        in: query
        description: Space-separated list of requested scope values
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: state
        in: query
        description: Opaque value to maintain state between request and callback
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nonce
        in: query
        description: Random value used to prevent replay attacks
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Authorization successful
        "302":
          description: Redirect to client with authorization code
          headers:
            Location:
              style: simple
              explode: false
              schema:
                type: string
                description: Redirect URI with authorization code
                format: uri
  /oauth/token:
    post:
      tags:
      - OAuth
      summary: Token endpoint
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/oauth_token_body'
        required: true
      responses:
        "200":
          description: Token successfully issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
  /oauth/introspection:
    get:
      tags:
      - OAuth
      summary: Token introspection
      parameters:
      - name: token
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Token information retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
  /oauth/userinfo:
    get:
      tags:
      - OAuth
      summary: User information
      responses:
        "200":
          description: User information retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
      security:
      - OAuth2: []
  /common/consent:
    post:
      tags:
      - Common
      summary: Create consent
      responses:
        "201":
          description: Consent created successfully
  /common/consent/{id}:
    get:
      tags:
      - Common
      summary: Get consent information
      description: API for retrieving the latest consent information
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Consent information retrieved
    put:
      tags:
      - Common
      summary: Update consent
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Consent updated successfully
    delete:
      tags:
      - Common
      summary: Revoke consent
      description: API for revoking a previously provided consent
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Consent revoked successfully
  /common/customer:
    get:
      tags:
      - Common
      summary: Get customer's Personal Information
      description: (deprecate?) Returns the customer's Personal Information as defined
        in section 5.2.3
      responses:
        "200":
          description: Customer's Personal Information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalInformation'
      security:
      - OAuth2: []
  /common/customer/{id}/detail:
    get:
      tags:
      - Common
      summary: Get detailed customer information
      parameters:
      - name: id
        in: path
        description: "Customer ID, this should map to the sub field returned from\
          \ the /oauth/userinfo endpoint"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Customer's Personal Information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalInformation'
  /banking/account:
    get:
      tags:
      - Banking
      summary: Get source account information
      description: API for retrieving information about the customer's source account
      responses:
        "200":
          description: Account information retrieved
  /banking/products:
    get:
      tags:
      - Banking
      summary: Get PERA products
      description: API for retrieving list of PERA products the customer could subscribe
        to
      responses:
        "200":
          description: Products list retrieved
  /banking/accounts:
    get:
      tags:
      - Banking
      summary: Get banking accounts
      responses:
        "200":
          description: Banking accounts retrieved
    post:
      tags:
      - Banking
      summary: Create banking account
      responses:
        "201":
          description: Banking account created
  /banking/accounts/{id}:
    get:
      tags:
      - Banking
      summary: Get specific banking account
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Banking account retrieved
  /banking/account/{id}/transactions:
    get:
      tags:
      - Banking
      summary: Get account transactions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Account transactions retrieved
  /banking/account/{id}/transactions/{transactionId}:
    get:
      tags:
      - Banking
      summary: Get specific transaction
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: transactionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Transaction details retrieved
  /banking/payments:
    get:
      tags:
      - Banking
      summary: Get payments
      responses:
        "200":
          description: Payments retrieved
    post:
      tags:
      - Banking
      summary: Initiate payment
      description: API for initiating a payment (money movement) transaction
      responses:
        "201":
          description: Payment initiated successfully
  /banking/payments/{id}:
    get:
      tags:
      - Banking
      summary: Get payment status
      description: API for retrieving and validating payment status and other details
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Payment status retrieved
    delete:
      tags:
      - Banking
      summary: Cancel payment
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Payment cancelled successfully
components:
  schemas:
    Address:
      required:
      - city
      - country
      - postal_code
      - province
      - region
      type: object
      properties:
        region:
          maxLength: 10
          type: string
          description: PSGC Code
        province:
          maxLength: 10
          type: string
          description: PSGC Code
        city:
          maxLength: 10
          type: string
          description: PSGC Code
        barangay:
          maxLength: 10
          type: string
          description: PSGC Code
        street_address:
          maxLength: 200
          type: string
        country:
          maxLength: 3
          type: string
          description: ISO 3166 Code
        postal_code:
          maxLength: 10
          type: string
    IdType:
      required:
      - idNumber
      - idType
      type: object
      properties:
        idNumber:
          maxLength: 50
          type: string
        idExpiryDate:
          maxLength: 10
          type: string
          description: Format is YYYY-MM-DD
          format: date
        idType:
          maxLength: 100
          type: string
          description: "ID Type (e.g., \"Drivers License\", \"Passport\", etc.)"
    PersonalInformation:
      required:
      - birthdate
      - email
      - givenName
      - lastName
      - mobileNumber
      - nationality
      - peraAdmin
      - presentedIds
      - sub
      type: object
      properties:
        sub:
          maxLength: 50
          type: string
          description: Subject – FI's unique identifier for the End-User
        title:
          maxLength: 50
          type: string
        givenName:
          maxLength: 50
          type: string
        middleName:
          maxLength: 50
          type: string
        lastName:
          maxLength: 50
          type: string
        suffix:
          maxLength: 10
          type: string
        phoneNumber:
          maxLength: 15
          pattern: "^[0-9]{11}$"
          type: string
          example: "63287654321"
        mobileNumber:
          maxLength: 15
          pattern: "^[0-9]{12}$"
          type: string
          example: "639171234567"
        email:
          maxLength: 50
          type: string
          format: email
        birthdate:
          maxLength: 10
          type: string
          description: Format YYYY-MM-DD
          format: date
        nationality:
          maxLength: 3
          type: string
          description: ISO 3166 Code
        tin:
          maxLength: 15
          pattern: "^[0-9]{3}-[0-9]{3}-[0-9]{3}-[0-9]{3}$"
          type: string
          description: Format NNN-NNN-NNN-000
        presentedIds:
          type: array
          description: Array of identification details
          items:
            $ref: '#/components/schemas/IdType'
        cdd:
          $ref: '#/components/schemas/CustomerDueDiligence'
        peraAdmin:
          maxLength: 50
          type: string
          description: Selected PERA Admin by Customer FI Codes of PERA admin
    CustomerDueDiligence:
      required:
      - cddIndicator
      - employmentStatus
      - fundSource
      - pepIndicator
      type: object
      properties:
        employmentStatus:
          maxLength: 50
          type: string
        occupation:
          maxLength: 150
          type: string
        natureOfWork:
          maxLength: 10
          type: string
          description: PSIC Code
        employerName:
          maxLength: 255
          type: string
        employerAddress:
          $ref: '#/components/schemas/Address'
        pepIndicator:
          type: boolean
          description: Politically Exposed Person 1 - True; 0 - False
        fundSource:
          maxLength: 100
          type: string
          description: Source of Funds
        cddIndicator:
          maxLength: 6
          type: string
          description: Customer Due Diligence Risk Level
          enum:
          - Low
          - Normal
          - High
    Organization:
      required:
      - authorizationServers
      - businessAddress
      - contactDetails
      - organizationId
      - organizationName
      - organizationType
      - registeredName
      - registeredOfficeAddress
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier assigned to the organization
        organizationName:
          type: string
          description: Trading name of the organization
        organizationType:
          type: string
          description: Type of organization in the PERA ecosystem
          enum:
          - PERA_ADMIN
          - CONTRIBUTOR_INSTITUTION
        registeredName:
          type: string
          description: Legal registered name of the organization
        registeredOfficeAddress:
          $ref: '#/components/schemas/Address'
        businessAddress:
          $ref: '#/components/schemas/Address'
        contactDetails:
          $ref: '#/components/schemas/Organization_contactDetails'
        authorizationServers:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationServer'
    AuthorizationServer:
      required:
      - authorizationEndpoint
      - authorizationServerId
      - tokenEndpoint
      type: object
      properties:
        authorizationServerId:
          type: string
        authorizationEndpoint:
          type: string
          format: uri
        tokenEndpoint:
          type: string
          format: uri
        registrationEndpoint:
          type: string
          format: uri
    inline_response_200:
      required:
      - certificate
      - subject
      - validFrom
      - validUntil
      type: object
      properties:
        certificate:
          type: string
          description: PEM-encoded X.509 certificate as a string
        validFrom:
          type: string
          description: Certificate validity start date
          format: date-time
        validUntil:
          type: string
          description: Certificate validity end date
          format: date-time
        subject:
          $ref: '#/components/schemas/inline_response_200_subject'
    oauth_par_body:
      required:
      - client_id
      - redirect_uri
      - response_type
      - scope
      type: object
      properties:
        response_type:
          type: string
          enum:
          - code
        client_id:
          type: string
        redirect_uri:
          type: string
          format: uri
        scope:
          type: string
        state:
          type: string
        nonce:
          type: string
    inline_response_200_1:
      required:
      - expires_in
      - request_uri
      type: object
      properties:
        request_uri:
          type: string
        expires_in:
          type: integer
    oauth_token_body:
      required:
      - client_id
      - code
      - grant_type
      - redirect_uri
      type: object
      properties:
        grant_type:
          type: string
          enum:
          - authorization_code
          - refresh_token
        code:
          type: string
          description: Authorization code received from the authorization server.
        redirect_uri:
          type: string
          description: Redirect URI used in the authorization request.
          format: uri
        client_id:
          type: string
          description: Client identifier for the token request.
        client_secret:
          type: string
          description: Client secret for the token request.
        refresh_token:
          type: string
          description: Refresh token used to obtain a new access token.
    inline_response_200_2:
      required:
      - access_token
      - expires_in
      - token_type
      type: object
      properties:
        access_token:
          type: string
          description: Access token for the authenticated user.
        token_type:
          type: string
          description: Type of the token.
          enum:
          - Bearer
        expires_in:
          type: integer
          description: Expiration time of the access token in seconds.
        refresh_token:
          type: string
          description: Refresh token for obtaining a new access token.
        scope:
          type: string
          description: Scope of the access token.
    inline_response_200_3:
      required:
      - active
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the token is currently active.
        client_id:
          type: string
          description: Client identifier for the token.
        username:
          type: string
          description: Username associated with the token.
        scope:
          type: string
          description: Scope of the token.
        exp:
          type: integer
          description: Expiration timestamp of the token in seconds since epoch.
        iat:
          type: integer
          description: Issued at timestamp of the token in seconds since epoch.
    inline_response_200_4:
      type: object
      properties:
        sub:
          type: string
          description: Unique identifier for the user from the authentication provider's
            perspective.
        name:
          type: string
          description: Full name of the user.
        given_name:
          type: string
          description: Given name of the user.
        family_name:
          type: string
          description: Family name of the user.
        email:
          type: string
          description: Email address of the user.
          format: email
        email_verified:
          type: boolean
          description: Indicates whether the user's email address has been verified.
        phone_number:
          type: string
          description: Phone number of the user.
        phone_number_verified:
          type: boolean
          description: Indicates whether the user's phone number has been verified.
    Organization_contactDetails:
      required:
      - email
      - phone
      type: object
      properties:
        phone:
          type: string
        email:
          type: string
          format: email
    inline_response_200_subject:
      type: object
      properties:
        commonName:
          type: string
        organizationName:
          type: string
        organizationId:
          type: string
  parameters:
    ParticipantId:
      name: participant-id
      in: header
      description: Field referencing the unique identifier of the requesting participant.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ApiVersion:
      name: x-v
      in: header
      description: Version of the API endpoint requested by the client. Must be set
        to a positive integer. If the version requested is not supported then the
        holder must respond with a 406 Not Acceptable.
      required: true
      style: simple
      explode: false
      schema:
        minimum: 1
        type: integer
    FapiInteractionId:
      name: x-fapi-interaction-id
      in: header
      description: "An [RFC4122] UUID used as a correlation id. If provided, the data\
        \ holder must play back this value in the x-fapi-interaction-id response header.\
        \ If not provided a [RFC4122] UUID value is required to be provided in the\
        \ response header to track the interaction."
      required: false
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    FapiAuthDate:
      name: x-fapi-auth-date
      in: header
      description: "The time when the customer last logged in to the Data Recipient\
        \ Software Product as described in [FAPI-1.0-Baseline]. Required for all resource\
        \ calls (customer present and unattended). Not required for unauthenticated\
        \ calls."
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: date-time
    FapiCustomerIpAddress:
      name: x-fapi-customer-ip-address
      in: header
      description: The customer's original IP address if the customer is currently
        logged in to the Data Recipient Software Product. The presence of this header
        indicates that the API is being called in a customer present context. Not
        to be included for unauthenticated calls.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: ipv4
    ClientHeaders:
      name: x-client-headers
      in: header
      description: "The customer's original standard http headers Base64 encoded,\
        \ including the original User-Agent header, if the customer is currently logged\
        \ in to the Data Recipient Software Product. Mandatory for customer present\
        \ calls. Not required for unattended or unauthenticated calls."
      required: false
      style: simple
      explode: false
      schema:
        type: string
        format: base64
    RetryAfter:
      name: Retry-After
      in: header
      description: Field indicating the time (in seconds) that the client should wait
        before retrying an operation. The response should include this header along
        with responses with the HTTP status code of 429 Too many requests.
      required: false
      style: simple
      explode: false
      schema:
        minimum: 0
        type: integer
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          scopes: {}
    openFinanceHeaders:
      type: apiKey
      description: Open Finance security headers
      name: participant-id
      in: header
x-global-headers:
- $ref: '#/components/parameters/ParticipantId'
- $ref: '#/components/parameters/ApiVersion'
- $ref: '#/components/parameters/FapiInteractionId'
- $ref: '#/components/parameters/FapiAuthDate'
- $ref: '#/components/parameters/FapiCustomerIpAddress'
- $ref: '#/components/parameters/ClientHeaders'
- $ref: '#/components/parameters/RetryAfter'
